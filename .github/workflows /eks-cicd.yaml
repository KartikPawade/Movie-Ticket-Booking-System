name: CI/CD pipeline for MovieTicketBookingSystem app on AWS EKS

on:
  push:
    branches: [ master ]

env:
  AWS_REGION: ap-south-1                   # setting my AWS region (Mumbai)
  JAVA_VERSION: '17'
  APP_DEPLOYMENT_YAML: eks-deployment-app.yaml

defaults:
  runs:
    on: ubuntu-latest

jobs:
  build-project:
    name: Build Project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build Project
        run: mvn clean install


  build-image:
    name: Build Docker Image
    needs: build-project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t my-spring-app .


  push-to-ecr:
    name: Push Docker Image to ECR
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: eks-movieticketbookingsystem
          IMAGE_TAG: latest

        run: |
          docker tag my-spring-app:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG                                 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy-to-eks:
    name: Deploy to EKS
    needs: push-to-ecr
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to EKS
        run: |
          kubectl apply -f ${{ env.APP_DEPLOYMENT_YAML }}